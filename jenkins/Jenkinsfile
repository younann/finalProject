pipeline {
    agent any

    environment {
        AWS_ACCESS_KEY_ID     = credentials('aws-access-key-id') // Use separate credentials IDs
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key') // Use separate credentials IDs
        AWS_DEFAULT_REGION    = 'us-west-2' // Updated to us-west-2
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/younann/finalProject.git' // Update with your repo URL
            }
        }

        stage('Terraform Init') {
            steps {
                dir('infra') { // Terraform files are in the 'infra' folder
                    sh 'terraform init'
                }
            }
        }

        stage('Terraform Plan') {
            steps {
                dir('infra') {
                    timeout(time: 10, unit: 'MINUTES') { // Add a timeout
                        sh '''
                            export TF_LOG=DEBUG
                            terraform plan -input=false \
                            -var="cluster_name=my-eks-cluster" \
                            -var="node_group_name=my-eks-node-group" \
                            -var="instance_type=t3.medium" \
                            -var="desired_size=2" \
                            -var="max_size=3" \
                            -var="min_size=1"
                        '''
                    }
                }
            }
        }

        stage('Terraform Apply') {
            steps {
                dir('infra') {
                    timeout(time: 10, unit: 'MINUTES') { // Add a timeout
                        sh '''
                            terraform apply -auto-approve \
                            -var="cluster_name=my-eks-cluster" \
                            -var="node_group_name=my-eks-node-group" \
                            -var="instance_type=t3.medium" \
                            -var="desired_size=2" \
                            -var="max_size=3" \
                            -var="min_size=1"
                        '''
                    }
                }
            }
        }
    }

    post {
        always {
            echo "Workspace path: ${WORKSPACE}"
            sh "ls -la ${WORKSPACE}" // Debug: List files in the workspace
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
